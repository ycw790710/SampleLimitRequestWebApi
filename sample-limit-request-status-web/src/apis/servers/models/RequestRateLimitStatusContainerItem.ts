/* tslint:disable */
/* eslint-disable */
/**
 * SampleLimitRequestWebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RequestRateLimitStatusPerTimeUnit } from './RequestRateLimitStatusPerTimeUnit';
import {
    RequestRateLimitStatusPerTimeUnitFromJSON,
    RequestRateLimitStatusPerTimeUnitFromJSONTyped,
    RequestRateLimitStatusPerTimeUnitToJSON,
} from './RequestRateLimitStatusPerTimeUnit';

/**
 * 
 * @export
 * @interface RequestRateLimitStatusContainerItem
 */
export interface RequestRateLimitStatusContainerItem {
    /**
     * 
     * @type {RequestRateLimitStatusPerTimeUnit}
     * @memberof RequestRateLimitStatusContainerItem
     */
    unit?: RequestRateLimitStatusPerTimeUnit;
    /**
     * 
     * @type {number}
     * @memberof RequestRateLimitStatusContainerItem
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof RequestRateLimitStatusContainerItem
     */
    amount?: number;
}

/**
 * Check if a given object implements the RequestRateLimitStatusContainerItem interface.
 */
export function instanceOfRequestRateLimitStatusContainerItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RequestRateLimitStatusContainerItemFromJSON(json: any): RequestRateLimitStatusContainerItem {
    return RequestRateLimitStatusContainerItemFromJSONTyped(json, false);
}

export function RequestRateLimitStatusContainerItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestRateLimitStatusContainerItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'unit': !exists(json, 'unit') ? undefined : RequestRateLimitStatusPerTimeUnitFromJSON(json['unit']),
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
    };
}

export function RequestRateLimitStatusContainerItemToJSON(value?: RequestRateLimitStatusContainerItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'unit': RequestRateLimitStatusPerTimeUnitToJSON(value.unit),
        'limit': value.limit,
        'amount': value.amount,
    };
}

