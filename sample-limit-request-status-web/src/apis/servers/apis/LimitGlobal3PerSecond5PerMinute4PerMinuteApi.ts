/* tslint:disable */
/* eslint-disable */
/**
 * SampleLimitRequestWebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface ApiLimitGlobal3PerSecond5PerMinute4PerMinuteGetNormalGetRequest {
    data?: string;
}

/**
 * 
 */
export class LimitGlobal3PerSecond5PerMinute4PerMinuteApi extends runtime.BaseAPI {

    /**
     */
    async apiLimitGlobal3PerSecond5PerMinute4PerMinuteGetNormalGetRaw(requestParameters: ApiLimitGlobal3PerSecond5PerMinute4PerMinuteGetNormalGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        if (requestParameters.data !== undefined) {
            queryParameters['data'] = requestParameters.data;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/LimitGlobal3PerSecond5PerMinute4PerMinute/Get_Normal`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     */
    async apiLimitGlobal3PerSecond5PerMinute4PerMinuteGetNormalGet(requestParameters: ApiLimitGlobal3PerSecond5PerMinute4PerMinuteGetNormalGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.apiLimitGlobal3PerSecond5PerMinute4PerMinuteGetNormalGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
